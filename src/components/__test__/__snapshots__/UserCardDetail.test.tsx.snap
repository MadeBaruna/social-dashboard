// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders <UserCardDetail /> components 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserCardDetail
    address={
      Object {
        "city": "Malang",
      }
    }
    company={
      Object {
        "name": "Kumparan",
      }
    }
    email="test@example.com"
    id={1}
    name="Test User"
    phone="1234567890"
    username="test"
    website="test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <CardContent>
          <CardHeader>
            Test User
          </CardHeader>
          <CardMeta>
            @
            test
          </CardMeta>
          <CardDescription>
            <ForwardRef>
              <div>
                <Icon
                  as="i"
                  name="envelope"
                />
                 
                test@example.com
                <br />
                <Icon
                  as="i"
                  name="globe"
                />
                 
                test
                <br />
                <Icon
                  as="i"
                  name="phone"
                />
                 
                1234567890
                <br />
                <Icon
                  as="i"
                  name="marker"
                />
                 
                Malang
                <br />
                <Icon
                  as="i"
                  name="building"
                />
                 
                Kumparan
                <br />
              </div>
              <div>
                <Image
                  as="img"
                  rounded={true}
                  src="https://via.placeholder.com/150/1234567890"
                  ui={true}
                />
              </div>
            </ForwardRef>
          </CardDescription>
        </CardContent>,
        <CardContent
          extra={true}
        >
          <Link
            replace={false}
            to="/user/1/albums"
          >
            <Button
              as="button"
              floated="right"
              primary={true}
            >
              <Icon
                as="i"
                name="images"
              />
              Albums
            </Button>
          </Link>
        </CardContent>,
      ],
      "fluid": true,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <CardHeader>
              Test User
            </CardHeader>,
            <CardMeta>
              @
              test
            </CardMeta>,
            <CardDescription>
              <ForwardRef>
                <div>
                  <Icon
                    as="i"
                    name="envelope"
                  />
                   
                  test@example.com
                  <br />
                  <Icon
                    as="i"
                    name="globe"
                  />
                   
                  test
                  <br />
                  <Icon
                    as="i"
                    name="phone"
                  />
                   
                  1234567890
                  <br />
                  <Icon
                    as="i"
                    name="marker"
                  />
                   
                  Malang
                  <br />
                  <Icon
                    as="i"
                    name="building"
                  />
                   
                  Kumparan
                  <br />
                </div>
                <div>
                  <Image
                    as="img"
                    rounded={true}
                    src="https://via.placeholder.com/150/1234567890"
                    ui={true}
                  />
                </div>
              </ForwardRef>
            </CardDescription>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Test User",
            },
            "ref": null,
            "rendered": "Test User",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                "@",
                "test",
              ],
            },
            "ref": null,
            "rendered": Array [
              "@",
              "test",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <ForwardRef>
                <div>
                  <Icon
                    as="i"
                    name="envelope"
                  />
                   
                  test@example.com
                  <br />
                  <Icon
                    as="i"
                    name="globe"
                  />
                   
                  test
                  <br />
                  <Icon
                    as="i"
                    name="phone"
                  />
                   
                  1234567890
                  <br />
                  <Icon
                    as="i"
                    name="marker"
                  />
                   
                  Malang
                  <br />
                  <Icon
                    as="i"
                    name="building"
                  />
                   
                  Kumparan
                  <br />
                </div>
                <div>
                  <Image
                    as="img"
                    rounded={true}
                    src="https://via.placeholder.com/150/1234567890"
                    ui={true}
                  />
                </div>
              </ForwardRef>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <div>
                    <Icon
                      as="i"
                      name="envelope"
                    />
                     
                    test@example.com
                    <br />
                    <Icon
                      as="i"
                      name="globe"
                    />
                     
                    test
                    <br />
                    <Icon
                      as="i"
                      name="phone"
                    />
                     
                    1234567890
                    <br />
                    <Icon
                      as="i"
                      name="marker"
                    />
                     
                    Malang
                    <br />
                    <Icon
                      as="i"
                      name="building"
                    />
                     
                    Kumparan
                    <br />
                  </div>,
                  <div>
                    <Image
                      as="img"
                      rounded={true}
                      src="https://via.placeholder.com/150/1234567890"
                      ui={true}
                    />
                  </div>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Icon
                        as="i"
                        name="envelope"
                      />,
                      " ",
                      "test@example.com",
                      <br />,
                      <Icon
                        as="i"
                        name="globe"
                      />,
                      " ",
                      "test",
                      <br />,
                      <Icon
                        as="i"
                        name="phone"
                      />,
                      " ",
                      "1234567890",
                      <br />,
                      <Icon
                        as="i"
                        name="marker"
                      />,
                      " ",
                      "Malang",
                      <br />,
                      <Icon
                        as="i"
                        name="building"
                      />,
                      " ",
                      "Kumparan",
                      <br />,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "name": "envelope",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " ",
                    "test@example.com",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "name": "globe",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " ",
                    "test",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "name": "phone",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " ",
                    "1234567890",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "name": "marker",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " ",
                    "Malang",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "as": "i",
                        "name": "building",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    " ",
                    "Kumparan",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "br",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Image
                      as="img"
                      rounded={true}
                      src="https://via.placeholder.com/150/1234567890"
                      ui={true}
                    />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": "img",
                      "rounded": true,
                      "src": "https://via.placeholder.com/150/1234567890",
                      "ui": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": true,
                  "rules": Array [
                    "
  display: flex;
  flex-direction: row;
  flex-wrap: wrap-reverse;

  & > div:first-child {
    white-space: nowrap;
    flex: 1;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              },
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Link
            replace={false}
            to="/user/1/albums"
          >
            <Button
              as="button"
              floated="right"
              primary={true}
            >
              <Icon
                as="i"
                name="images"
              />
              Albums
            </Button>
          </Link>,
          "extra": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Button
              as="button"
              floated="right"
              primary={true}
            >
              <Icon
                as="i"
                name="images"
              />
              Albums
            </Button>,
            "replace": false,
            "to": "/user/1/albums",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": Array [
                <Icon
                  as="i"
                  name="images"
                />,
                "Albums",
              ],
              "floated": "right",
              "primary": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "i",
                  "name": "images",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "Albums",
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <CardContent>
            <CardHeader>
              Test User
            </CardHeader>
            <CardMeta>
              @
              test
            </CardMeta>
            <CardDescription>
              <ForwardRef>
                <div>
                  <Icon
                    as="i"
                    name="envelope"
                  />
                   
                  test@example.com
                  <br />
                  <Icon
                    as="i"
                    name="globe"
                  />
                   
                  test
                  <br />
                  <Icon
                    as="i"
                    name="phone"
                  />
                   
                  1234567890
                  <br />
                  <Icon
                    as="i"
                    name="marker"
                  />
                   
                  Malang
                  <br />
                  <Icon
                    as="i"
                    name="building"
                  />
                   
                  Kumparan
                  <br />
                </div>
                <div>
                  <Image
                    as="img"
                    rounded={true}
                    src="https://via.placeholder.com/150/1234567890"
                    ui={true}
                  />
                </div>
              </ForwardRef>
            </CardDescription>
          </CardContent>,
          <CardContent
            extra={true}
          >
            <Link
              replace={false}
              to="/user/1/albums"
            >
              <Button
                as="button"
                floated="right"
                primary={true}
              >
                <Icon
                  as="i"
                  name="images"
                />
                Albums
              </Button>
            </Link>
          </CardContent>,
        ],
        "fluid": true,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <CardHeader>
                Test User
              </CardHeader>,
              <CardMeta>
                @
                test
              </CardMeta>,
              <CardDescription>
                <ForwardRef>
                  <div>
                    <Icon
                      as="i"
                      name="envelope"
                    />
                     
                    test@example.com
                    <br />
                    <Icon
                      as="i"
                      name="globe"
                    />
                     
                    test
                    <br />
                    <Icon
                      as="i"
                      name="phone"
                    />
                     
                    1234567890
                    <br />
                    <Icon
                      as="i"
                      name="marker"
                    />
                     
                    Malang
                    <br />
                    <Icon
                      as="i"
                      name="building"
                    />
                     
                    Kumparan
                    <br />
                  </div>
                  <div>
                    <Image
                      as="img"
                      rounded={true}
                      src="https://via.placeholder.com/150/1234567890"
                      ui={true}
                    />
                  </div>
                </ForwardRef>
              </CardDescription>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Test User",
              },
              "ref": null,
              "rendered": "Test User",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  "@",
                  "test",
                ],
              },
              "ref": null,
              "rendered": Array [
                "@",
                "test",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <ForwardRef>
                  <div>
                    <Icon
                      as="i"
                      name="envelope"
                    />
                     
                    test@example.com
                    <br />
                    <Icon
                      as="i"
                      name="globe"
                    />
                     
                    test
                    <br />
                    <Icon
                      as="i"
                      name="phone"
                    />
                     
                    1234567890
                    <br />
                    <Icon
                      as="i"
                      name="marker"
                    />
                     
                    Malang
                    <br />
                    <Icon
                      as="i"
                      name="building"
                    />
                     
                    Kumparan
                    <br />
                  </div>
                  <div>
                    <Image
                      as="img"
                      rounded={true}
                      src="https://via.placeholder.com/150/1234567890"
                      ui={true}
                    />
                  </div>
                </ForwardRef>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <div>
                      <Icon
                        as="i"
                        name="envelope"
                      />
                       
                      test@example.com
                      <br />
                      <Icon
                        as="i"
                        name="globe"
                      />
                       
                      test
                      <br />
                      <Icon
                        as="i"
                        name="phone"
                      />
                       
                      1234567890
                      <br />
                      <Icon
                        as="i"
                        name="marker"
                      />
                       
                      Malang
                      <br />
                      <Icon
                        as="i"
                        name="building"
                      />
                       
                      Kumparan
                      <br />
                    </div>,
                    <div>
                      <Image
                        as="img"
                        rounded={true}
                        src="https://via.placeholder.com/150/1234567890"
                        ui={true}
                      />
                    </div>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <Icon
                          as="i"
                          name="envelope"
                        />,
                        " ",
                        "test@example.com",
                        <br />,
                        <Icon
                          as="i"
                          name="globe"
                        />,
                        " ",
                        "test",
                        <br />,
                        <Icon
                          as="i"
                          name="phone"
                        />,
                        " ",
                        "1234567890",
                        <br />,
                        <Icon
                          as="i"
                          name="marker"
                        />,
                        " ",
                        "Malang",
                        <br />,
                        <Icon
                          as="i"
                          name="building"
                        />,
                        " ",
                        "Kumparan",
                        <br />,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "i",
                          "name": "envelope",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " ",
                      "test@example.com",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "i",
                          "name": "globe",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " ",
                      "test",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "i",
                          "name": "phone",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " ",
                      "1234567890",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "i",
                          "name": "marker",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " ",
                      "Malang",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "i",
                          "name": "building",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      " ",
                      "Kumparan",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Image
                        as="img"
                        rounded={true}
                        src="https://via.placeholder.com/150/1234567890"
                        ui={true}
                      />,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": "img",
                        "rounded": true,
                        "src": "https://via.placeholder.com/150/1234567890",
                        "ui": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": true,
                    "rules": Array [
                      "
  display: flex;
  flex-direction: row;
  flex-wrap: wrap-reverse;

  & > div:first-child {
    white-space: nowrap;
    flex: 1;
  }
",
                    ],
                  },
                  "displayName": "styled.div",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "div",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                },
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Link
              replace={false}
              to="/user/1/albums"
            >
              <Button
                as="button"
                floated="right"
                primary={true}
              >
                <Icon
                  as="i"
                  name="images"
                />
                Albums
              </Button>
            </Link>,
            "extra": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Button
                as="button"
                floated="right"
                primary={true}
              >
                <Icon
                  as="i"
                  name="images"
                />
                Albums
              </Button>,
              "replace": false,
              "to": "/user/1/albums",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "children": Array [
                  <Icon
                    as="i"
                    name="images"
                  />,
                  "Albums",
                ],
                "floated": "right",
                "primary": true,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "i",
                    "name": "images",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "Albums",
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
